{"ast":null,"code":"var _jsxFileName = \"/Users/gimsangjun/Desktop/emotiondiary/src/components/DiaryEditor.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport { useState, useRef, useContext, useEffect } from \"react\";\nimport { DiaryDispatchContext } from \"../App\";\nimport MyHeader from \"./MyHeader\";\nimport MyButton from \"./MyButton\";\nimport EmotionItem from \"./EmotionItem\";\nimport { getStringDate } from \"../util/date\";\nimport { emotionList } from \"../util/emotion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiaryEditor = _ref => {\n  _s();\n  let {\n    isEdit,\n    originData\n  } = _ref;\n  const contentRef = useRef();\n  const [content, setContent] = useState(\"\");\n  const [emotion, setEmotion] = useState(3);\n  const [date, setDate] = useState(getStringDate(new Date()));\n  const {\n    onCreate,\n    onEdit\n  } = useContext(DiaryDispatchContext);\n  const handleClickEmote = emotion => {\n    setEmotion(emotion);\n  };\n  const handleSubmit = () => {\n    if (content.length < 1) {\n      contentRef.current.focus();\n      return;\n    }\n    if (window.confirm(isEdit ? \"일기를 수정하시겠습니까?\" : \"새로운 일기를 작성하시겠습니까?\")) {\n      if (!isEdit) {\n        onCreate(date, content, emotion);\n      } else {\n        onEdit(originData.id, date, content, emotion);\n      }\n    }\n    navigate(\"/\", {\n      replace: true\n    });\n  };\n  useEffect(() => {\n    if (isEdit) {\n      setDate(getStringDate(new Date(parseInt(originData.date))));\n      setEmotion(originData.emotion);\n      setContent(originData.content);\n    }\n  }, [isEdit, originData]);\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DiaryEditor\",\n    children: [/*#__PURE__*/_jsxDEV(MyHeader, {\n      headText: isEdit ? \"일기 수정하기\" : \"새 일기쓰기\",\n      leftChild: /*#__PURE__*/_jsxDEV(MyButton, {\n        text: \"< 뒤로가기\",\n        onClick: () => navigate(-1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC624\\uB298\\uC740 \\uC5B8\\uC81C\\uC778\\uAC00\\uC694?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_box\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input_date\",\n            value: date,\n            onChange: e => setDate(e.target.value),\n            type: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC624\\uB298\\uC758 \\uAC10\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_box emotion_list_wrapper\",\n          children: emotionList.map(it => /*#__PURE__*/_jsxDEV(EmotionItem, {\n            ...it,\n            onClick: handleClickEmote,\n            isSelected: it.emotion_id === emotion\n          }, it.emotion_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC624\\uB298\\uC758 \\uC77C\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_box text_wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"\\uC624\\uB298\\uC740 \\uC5B4\\uB560\\uB098\\uC694\",\n            ref: contentRef,\n            value: content,\n            onChange: e => setContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control_box\",\n          children: [/*#__PURE__*/_jsxDEV(MyButton, {\n            text: \"취소하기\",\n            onClick: () => navigate(-1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n            text: \"작성완료\",\n            type: \"positive\",\n            onClick: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(DiaryEditor, \"pz2HiFVMn3wTb0NRV4UaR5FW2mQ=\", false, function () {\n  return [useNavigate];\n});\n_c = DiaryEditor;\nexport default DiaryEditor;\nvar _c;\n$RefreshReg$(_c, \"DiaryEditor\");","map":{"version":3,"names":["useNavigate","useState","useRef","useContext","useEffect","DiaryDispatchContext","MyHeader","MyButton","EmotionItem","getStringDate","emotionList","DiaryEditor","isEdit","originData","contentRef","content","setContent","emotion","setEmotion","date","setDate","Date","onCreate","onEdit","handleClickEmote","handleSubmit","length","current","focus","window","confirm","id","navigate","replace","parseInt","e","target","value","map","it","emotion_id"],"sources":["/Users/gimsangjun/Desktop/emotiondiary/src/components/DiaryEditor.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\nimport { useState, useRef, useContext, useEffect } from \"react\";\nimport { DiaryDispatchContext } from \"../App\";\n\nimport MyHeader from \"./MyHeader\";\nimport MyButton from \"./MyButton\";\nimport EmotionItem from \"./EmotionItem\";\n\nimport { getStringDate } from \"../util/date\";\nimport { emotionList } from \"../util/emotion\";\n\nconst DiaryEditor = ({ isEdit, originData }) => {\n  const contentRef = useRef();\n  const [content, setContent] = useState(\"\");\n  const [emotion, setEmotion] = useState(3);\n  const [date, setDate] = useState(getStringDate(new Date()));\n\n  const { onCreate, onEdit } = useContext(DiaryDispatchContext);\n\n  const handleClickEmote = (emotion) => {\n    setEmotion(emotion);\n  };\n\n  const handleSubmit = () => {\n    if (content.length < 1) {\n      contentRef.current.focus();\n      return;\n    }\n    if (\n      window.confirm(\n        isEdit ? \"일기를 수정하시겠습니까?\" : \"새로운 일기를 작성하시겠습니까?\"\n      )\n    ) {\n      if (!isEdit) {\n        onCreate(date, content, emotion);\n      } else {\n        onEdit(originData.id, date, content, emotion);\n      }\n    }\n    navigate(\"/\", { replace: true });\n  };\n\n  useEffect(() => {\n    if (isEdit) {\n      setDate(getStringDate(new Date(parseInt(originData.date))));\n      setEmotion(originData.emotion);\n      setContent(originData.content);\n    }\n  }, [isEdit, originData]);\n\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"DiaryEditor\">\n      <MyHeader\n        headText={isEdit ? \"일기 수정하기\" : \"새 일기쓰기\"}\n        leftChild={\n          <MyButton text={\"< 뒤로가기\"} onClick={() => navigate(-1)} />\n        }\n      />\n      <div>\n        <section>\n          <h4>오늘은 언제인가요?</h4>\n          <div className=\"input_box\">\n            <input\n              className=\"input_date\"\n              value={date}\n              onChange={(e) => setDate(e.target.value)}\n              type=\"date\"\n            />\n          </div>\n        </section>\n        <section>\n          <h4>오늘의 감정</h4>\n          <div className=\"input_box emotion_list_wrapper\">\n            {emotionList.map((it) => (\n              <EmotionItem\n                key={it.emotion_id}\n                {...it}\n                onClick={handleClickEmote}\n                isSelected={it.emotion_id === emotion}\n              />\n            ))}\n          </div>\n        </section>\n        <section>\n          <h4>오늘의 일기</h4>\n          <div className=\"input_box text_wrapper\">\n            <textarea\n              placeholder=\"오늘은 어땠나요\"\n              ref={contentRef}\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n            />\n          </div>\n        </section>\n        <section>\n          <div className=\"control_box\">\n            <MyButton text={\"취소하기\"} onClick={() => navigate(-1)} />\n            <MyButton\n              text={\"작성완료\"}\n              type={\"positive\"}\n              onClick={handleSubmit}\n            />\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n};\nexport default DiaryEditor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}