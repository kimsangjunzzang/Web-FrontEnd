{"ast":null,"code":"var _jsxFileName = \"/Users/gimsangjun/Desktop/React_SimpleDiary/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\";\nimport \"./App.css\";\n\n//https://jsonplaceholder.typicode.com/comments\n\n/*const dummyList = [\n  {\n    id: 1,\n    author: \"김상준\",\n    content: \"하이 1\",\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 2,\n    author: \"김상준\",\n    content: \"하이 2\",\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 3,\n    author: \"김상준\",\n    content: \"하이 3\",\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n];\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setDate] = useState([]);\n  const dataId = useRef(0);\n  const getData = async () => {\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/comments\").then(res => res.json());\n    const initData = res.slice(0, 20).map(it => {\n      return {\n        author: it.email,\n        content: it.body,\n        emotion: Math.floor(Math.random() * 5) + 1,\n        created_date: new Date().getTime(),\n        id: dataId.current++\n      };\n    });\n    setDate(initDate);\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current\n    };\n    dataId.current += 1;\n    setDate([newItem, ...data]);\n  };\n  const onRemove = targetId => {\n    console.log(`${targetId}가 삭제되었습니다`);\n    const newDiaryList = data.filter(it => it.id !== targetId);\n    setDate(newDiaryList);\n  };\n  const onEdit = (targetId, newContent) => {\n    setDate(data.map(it => it.id === targetId ? {\n      ...it,\n      content: newContent\n    } : it));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(DiaryEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      onEdit: onEdit,\n      onRemove: onRemove,\n      diaryList: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"a/zsfg/j1Lkc+36QMEFKfCaTuoE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","DiaryEditor","DiaryList","App","data","setDate","dataId","getData","res","fetch","then","json","initData","slice","map","it","author","email","content","body","emotion","Math","floor","random","created_date","Date","getTime","id","current","initDate","onCreate","newItem","onRemove","targetId","console","log","newDiaryList","filter","onEdit","newContent"],"sources":["/Users/gimsangjun/Desktop/React_SimpleDiary/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\";\nimport \"./App.css\";\n\n//https://jsonplaceholder.typicode.com/comments\n\n/*const dummyList = [\n  {\n    id: 1,\n    author: \"김상준\",\n    content: \"하이 1\",\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 2,\n    author: \"김상준\",\n    content: \"하이 2\",\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 3,\n    author: \"김상준\",\n    content: \"하이 3\",\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n];\n*/ function App() {\n  const [data, setDate] = useState([]);\n\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch(\n      \"https://jsonplaceholder.typicode.com/comments\"\n    ).then((res) => res.json());\n\n    const initData = res.slice(0, 20).map((it) => {\n      return {\n        author: it.email,\n        content: it.body,\n        emotion: Math.floor(Math.random() * 5) + 1,\n        created_date: new Date().getTime(),\n        id: dataId.current++,\n      };\n    });\n    setDate(initDate);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current,\n    };\n    dataId.current += 1;\n    setDate([newItem, ...data]);\n  };\n  const onRemove = (targetId) => {\n    console.log(`${targetId}가 삭제되었습니다`);\n    const newDiaryList = data.filter((it) => it.id !== targetId);\n    setDate(newDiaryList);\n  };\n  const onEdit = (targetId, newContent) => {\n    setDate(\n      data.map((it) =>\n        it.id === targetId ? { ...it, content: newContent } : it\n      )\n    );\n  };\n  return (\n    <div className=\"App\">\n      <DiaryEditor onCreate={onCreate} />\n      <DiaryList onEdit={onEdit} onRemove={onRemove} diaryList={data} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}