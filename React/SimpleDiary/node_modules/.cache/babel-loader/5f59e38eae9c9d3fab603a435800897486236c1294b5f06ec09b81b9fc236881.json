{"ast":null,"code":"var _jsxFileName = \"/Users/gimsangjun/Desktop/React_SimpleDiary/src/OptimizeTest.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Textview = _ref => {\n  _s();\n  let {\n    text\n  } = _ref;\n  useEffect(() => {\n    console.log(`Update :: Text ${text}`);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n};\n_s(Textview, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Textview;\nconst Countview = _ref2 => {\n  _s2();\n  let {\n    count\n  } = _ref2;\n  useEffect(() => {\n    console.log(`Update :: Count ${count}`);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n};\n_s2(Countview, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = Countview;\nconst OptimizeTest = () => {\n  _s3();\n  const [count, setCount] = useState(1);\n  const [text, setText] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 50\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Countview, {\n        count: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCount(count + 1),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Textview, {\n        text: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s3(OptimizeTest, \"dNtZfp4oyj4N/7iJZUhPAuJHtEE=\");\n_c3 = OptimizeTest;\nexport default OptimizeTest;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Textview\");\n$RefreshReg$(_c2, \"Countview\");\n$RefreshReg$(_c3, \"OptimizeTest\");","map":{"version":3,"names":["React","useState","useEffect","Textview","text","console","log","Countview","count","OptimizeTest","setCount","setText","padding","e","target","value"],"sources":["/Users/gimsangjun/Desktop/React_SimpleDiary/src/OptimizeTest.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Textview = ({ text }) => {\n  useEffect(() => {\n    console.log(`Update :: Text ${text}`);\n  });\n  return <div>{text}</div>;\n};\nconst Countview = ({ count }) => {\n  useEffect(() => {\n    console.log(`Update :: Count ${count}`);\n  });\n  return <div>{count}</div>;\n};\nconst OptimizeTest = () => {\n  const [count, setCount] = useState(1);\n  const [text, setText] = useState(\"\");\n  return (\n    <div style={{ padding: 50 }}>\n      <div>\n        <h2>count</h2>\n        <Countview count={count} />\n        <button onClick={() => setCount(count + 1)}>+</button>\n      </div>\n      <div>\n        <h2>text</h2>\n        <Textview text={text} />\n        <input value={text} onChange={(e) => setText(e.target.value)} />\n      </div>\n    </div>\n  );\n};\n\nexport default OptimizeTest;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,MAAMC,QAAQ,GAAG,QAAc;EAAA;EAAA,IAAb;IAAEC;EAAK,CAAC;EACxBF,SAAS,CAAC,MAAM;IACdG,OAAO,CAACC,GAAG,CAAE,kBAAiBF,IAAK,EAAC,CAAC;EACvC,CAAC,CAAC;EACF,oBAAO;IAAA,UAAMA;EAAI;IAAA;IAAA;IAAA;EAAA,QAAO;AAC1B,CAAC;AAAC,GALID,QAAQ;AAAA,KAARA,QAAQ;AAMd,MAAMI,SAAS,GAAG,SAAe;EAAA;EAAA,IAAd;IAAEC;EAAM,CAAC;EAC1BN,SAAS,CAAC,MAAM;IACdG,OAAO,CAACC,GAAG,CAAE,mBAAkBE,KAAM,EAAC,CAAC;EACzC,CAAC,CAAC;EACF,oBAAO;IAAA,UAAMA;EAAK;IAAA;IAAA;IAAA;EAAA,QAAO;AAC3B,CAAC;AAAC,IALID,SAAS;AAAA,MAATA,SAAS;AAMf,MAAME,YAAY,GAAG,MAAM;EAAA;EACzB,MAAM,CAACD,KAAK,EAAEE,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACG,IAAI,EAAEO,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,oBACE;IAAK,KAAK,EAAE;MAAEW,OAAO,EAAE;IAAG,CAAE;IAAA,wBAC1B;MAAA,wBACE;QAAA,UAAI;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK,eACd,QAAC,SAAS;QAAC,KAAK,EAAEJ;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eAC3B;QAAQ,OAAO,EAAE,MAAME,QAAQ,CAACF,KAAK,GAAG,CAAC,CAAE;QAAA,UAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAClD,eACN;MAAA,wBACE;QAAA,UAAI;MAAI;QAAA;QAAA;QAAA;MAAA,QAAK,eACb,QAAC,QAAQ;QAAC,IAAI,EAAEJ;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG,eACxB;QAAO,KAAK,EAAEA,IAAK;QAAC,QAAQ,EAAGS,CAAC,IAAKF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5D;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,IAjBIN,YAAY;AAAA,MAAZA,YAAY;AAmBlB,eAAeA,YAAY;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}