{"ast":null,"code":"var _jsxFileName = \"/Users/gimsangjun/Desktop/simplediary/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\";\nimport \"./App.css\";\n\n/*const dummyList = [\n  {\n    id: 1,\n    author: \"김상준\",\n    content: \"하이 1\",\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 2,\n    author: \"김상준\",\n    content: \"하이 2\",\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 3,\n    author: \"김상준\",\n    content: \"하이 3\",\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n];\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setDate] = useState([]);\n  const dataId = useRef(0);\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current\n    };\n    dataId.current += 1;\n    setDate([newItem, ...data]);\n  };\n  const onRemove = targetId => {\n    console.log(`${targetId}가 삭제되었습니다`);\n    const newDiaryList = data.filter(it => it.id !== targetId);\n    setDate(newDiaryList);\n  };\n  const onEdit = (targetId, newContent) => {\n    setDate(data.mao(it => it.id === targetId ? {\n      ...it,\n      content: newContent\n    } : it));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(DiaryEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      onEfit: onEdit,\n      onRemove: onRemove,\n      diaryList: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"F9SKFQO9n8XFmY4N96xArjHOGyI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","DiaryEditor","DiaryList","App","data","setDate","dataId","onCreate","author","content","emotion","created_date","Date","getTime","newItem","id","current","onRemove","targetId","console","log","newDiaryList","filter","it","onEdit","newContent","mao"],"sources":["/Users/gimsangjun/Desktop/simplediary/src/App.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\";\nimport \"./App.css\";\n\n/*const dummyList = [\n  {\n    id: 1,\n    author: \"김상준\",\n    content: \"하이 1\",\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 2,\n    author: \"김상준\",\n    content: \"하이 2\",\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n  {\n    id: 3,\n    author: \"김상준\",\n    content: \"하이 3\",\n    emotion: 5,\n    created_date: new Date().getTime(),\n  },\n];\n*/ function App() {\n  const [data, setDate] = useState([]);\n\n  const dataId = useRef(0);\n\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current,\n    };\n    dataId.current += 1;\n    setDate([newItem, ...data]);\n  };\n  const onRemove = (targetId) => {\n    console.log(`${targetId}가 삭제되었습니다`);\n    const newDiaryList = data.filter((it) => it.id !== targetId);\n    setDate(newDiaryList);\n  };\n  const onEdit = (targetId, newContent) => {\n    setDate(\n      data.mao((it) =>\n        it.id === targetId ? { ...it, content: newContent } : it\n      )\n    );\n  };\n  return (\n    <div className=\"App\">\n      <DiaryEditor onCreate={onCreate} />\n      <DiaryList onEfit={onEdit} onRemove={onRemove} diaryList={data} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,WAAW;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAuBG,SAASC,GAAG,GAAG;EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMO,MAAM,GAAGN,MAAM,CAAC,CAAC,CAAC;EAExB,MAAMO,QAAQ,GAAG,CAACC,MAAM,EAAEC,OAAO,EAAEC,OAAO,KAAK;IAC7C,MAAMC,YAAY,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;IACzC,MAAMC,OAAO,GAAG;MACdN,MAAM;MACNC,OAAO;MACPC,OAAO;MACPC,YAAY;MACZI,EAAE,EAAET,MAAM,CAACU;IACb,CAAC;IACDV,MAAM,CAACU,OAAO,IAAI,CAAC;IACnBX,OAAO,CAAC,CAACS,OAAO,EAAE,GAAGV,IAAI,CAAC,CAAC;EAC7B,CAAC;EACD,MAAMa,QAAQ,GAAIC,QAAQ,IAAK;IAC7BC,OAAO,CAACC,GAAG,CAAE,GAAEF,QAAS,WAAU,CAAC;IACnC,MAAMG,YAAY,GAAGjB,IAAI,CAACkB,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACR,EAAE,KAAKG,QAAQ,CAAC;IAC5Db,OAAO,CAACgB,YAAY,CAAC;EACvB,CAAC;EACD,MAAMG,MAAM,GAAG,CAACN,QAAQ,EAAEO,UAAU,KAAK;IACvCpB,OAAO,CACLD,IAAI,CAACsB,GAAG,CAAEH,EAAE,IACVA,EAAE,CAACR,EAAE,KAAKG,QAAQ,GAAG;MAAE,GAAGK,EAAE;MAAEd,OAAO,EAAEgB;IAAW,CAAC,GAAGF,EAAE,CACzD,CACF;EACH,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB,QAAC,WAAW;MAAC,QAAQ,EAAEhB;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,eACnC,QAAC,SAAS;MAAC,MAAM,EAAEiB,MAAO;MAAC,QAAQ,EAAEP,QAAS;MAAC,SAAS,EAAEb;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9D;AAEV;AAAC,GAnCWD,GAAG;AAAA,KAAHA,GAAG;AAqCf,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}